variables:
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_BRANCH}
  TF_ROOT: ${CI_PROJECT_DIR}/terraform/environments/${CI_COMMIT_BRANCH}
  ANSIBLE_ROOT: ${CI_PROJECT_DIR}/ansible/environments/${CI_COMMIT_BRANCH}
  TF_VAR_environment: ${CI_COMMIT_BRANCH}
  TF_VAR_deploy_hash: ${CI_COMMIT_SHORT_SHA}


workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'production' && $CI_PIPELINE_SOURCE == 'push'
      when: always
    - if: $CI_COMMIT_BRANCH == 'production' && $CI_PIPELINE_SOURCE == 'web'
      when: always
    - when: never

stages:
  # - Env
  - Plan
  - Build
  - Deploy


Terraform Plan:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: Plan
  environment: ${CI_COMMIT_BRANCH}
  cache:
    key: terraform-${CI_COMMIT_BRANCH}
    paths:
      - ${TF_ROOT}/.terraform
  before_script:
    - cd ${TF_ROOT}
  script:
    - ls -la
    - gitlab-terraform init
    - gitlab-terraform validate
    - gitlab-terraform plan
    # - gitlab-terraform output -raw aws-checkout-ecr-address > aws-checkout-ecr-address.txt
    # - gitlab-terraform output -raw aws-club-back-nginx-ecr-address > aws-club-back-nginx-ecr-address.txt
  artifacts:
    name: tf-full
    paths:
      - ${TF_ROOT}/aws-checkout-ecr-address.txt
      # - ${TF_ROOT}/aws-club-back-nginx-ecr-address.txt
      - ${TF_ROOT}/plan.cache
  # needs:
  #   - Create Secrets

.Build Nuxt:
  image: node:16-alpine
  stage: Build
  environment: ${CI_COMMIT_BRANCH}
  before_script:
    - cd ${CI_PROJECT_DIR}
  script:
    - yarn install
    - yarn build

  artifacts:
    name: nuxt-app
    paths:
      - ${CI_PROJECT_DIR}/.output


.Build Images:
  image: docker:20.10.16-dind-alpine3.16
  stage: Build
  environment: ${CI_COMMIT_BRANCH}
  services:
    - docker:20.10.16-dind-alpine3.16
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_BUILDKIT: "1"
  before_script:
    - cd ${CI_PROJECT_DIR}
    - apk add python3 py3-pip
    - pip3 install --upgrade pip
    - pip3 install --no-cache-dir awscli
  script:
    # php
    - export CHECKOUT_IMAGE_TAG="$(cat ${TF_ROOT}/aws-checkout-ecr-address.txt):${DEPLOY_HASH}"
    - export LATEST_CHECKOUT_IMAGE_TAG="$(cat ${TF_ROOT}/aws-checkout-ecr-address.txt):latest"
    - aws ecr get-login-password | docker login --username AWS --password-stdin "$(aws sts get-caller-identity --query "Account" --output text).dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
    - docker pull $LATEST_CHECKOUT_IMAGE_TAG || true
    - docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $LATEST_CHECKOUT_IMAGE_TAG -f "Dockerfile" -t $CHECKOUT_IMAGE_TAG -t $LATEST_CHECKOUT_IMAGE_TAG .
    - docker push $CHECKOUT_IMAGE_TAG
    - docker push $LATEST_CHECKOUT_IMAGE_TAG

  needs:
    - Terraform Plan
    - Build Nuxt


Terraform Deploy:
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  stage: Deploy
  environment: ${CI_COMMIT_BRANCH}
  cache:
    key: terraform-${CI_COMMIT_BRANCH}
    paths:
      - ${TF_ROOT}/.terraform
  before_script:
    - cd ${TF_ROOT}
  script:
    - ls -la
    - gitlab-terraform apply
  needs:
    - Terraform Plan
    # - Build Images